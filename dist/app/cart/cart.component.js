System.registerDynamic("app/cart/cart.component.js",["./cart.config","./cart.tpl","sweetalert","./cart.css!"],!0,function(a,b,c){"use strict";function d(a){return a&&a.__esModule?a:{default:a}}function e(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(b,"__esModule",{value:!0});var f=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),g=a("./cart.config"),h=d(g),i=a("./cart.tpl"),j=d(i),k=a("sweetalert");d(k);a("./cart.css!");var l=function(){function a(b,c,d){e(this,a),this.Cart=b,this.History=c,this.$state=d,this.items=[],this.totalPrice=0}return a.$inject=["Cart","History","$state"],f(a,[{key:"$onInit",value:function(){var a=this;this.items=this.Cart.items,this.calcTotal(this.items),this.Cart.listen(function(b){a.calcTotal(b)})}},{key:"calcTotal",value:function(a){this.totalPrice=a.reduce(function(a,b){return a+=b.totalPrice},0)}},{key:"remove",value:function(a,b){b&&(a[b]=!0),this.Cart.remove(a)}},{key:"add",value:function(a){this.Cart.add(a)}},{key:"submit",value:function(){this.History.push({items:this.Cart.items,totalPrice:this.totalPrice}),this.Cart.clear(),this.$state.go("history")}}]),a}();return b.default=angular.module("app.cart",[j.default.name]).config(h.default).component("cart",{templateUrl:j.default.name,controller:l,controllerAs:"Cart"}),c.exports});